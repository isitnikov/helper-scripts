#!/usr/bin/env bash

if [ -z "$1" ]
then
      read -p 'Enter JIRA ticket number (empty for using current folder): ' PROJECT_NAME
else
  PROJECT_NAME=$(1)
fi



if [ -z "$2" ]
then
      read -p 'Enter cloud project ID: ' CLOUD_PROJECT_ID
else
  CLOUD_PROJECT_ID=$(2)
fi

PROJECT_NAME="${PROJECT_NAME//-/}"
PROJECT_NAME=$(echo "$PROJECT_NAME" |  tr '[:upper:]' '[:lower:]' )

if [ -z "${PROJECT_NAME}"]
then
  PROJECT_NAME=$(basename "$(pwd)")
else
  mkdir ${PROJECT_NAME}
  cd $_
fi

echo "Project name is ${PROJECT_NAME}"


mkdir .idea
UUID=$(uuidgen | tr '[:upper:]' '[:lower:]')

cat  << EOF > .idea/dataSources.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
    <data-source source="LOCAL" name="magento@${PROJECT_NAME}-db-1" uuid="${UUID}">
      <driver-ref>mariadb</driver-ref>
      <synchronize>true</synchronize>
      <user-name>magento</user-name>
      <jdbc-driver>org.mariadb.jdbc.Driver</jdbc-driver>
      <jdbc-url>jdbc:mariadb://${PROJECT_NAME}-db-1:3306/magento</jdbc-url>
      <working-dir>\$ProjectFileDir\$</working-dir>
      <ssh-properties>
              <enabled>true</enabled>
              <ssh-config-id>2a7205b3-f1f8-4185-9dd7-5e27e48f11f1</ssh-config-id>
            </ssh-properties>
    </data-source>
  </component>
</project>
EOF

UUID=$(uuidgen | tr '[:upper:]' '[:lower:]')
cat  << EOF > .idea/workspace.xml
<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="PhpServers">
      <servers>
        <server host="${PROJECT_NAME}-docker" id="${UUID}" name="${PROJECT_NAME}-docker-docker" use_path_mappings="true">
          <path_mappings>
            <mapping local-root="$PROJECT_DIR$" remote-root="/var/www/html" />
          </path_mappings>
        </server>
      </servers>
    </component>
</project>
EOF



if [ -z "$CLOUD_PROJECT_ID" ]
then
      echo "project id not specified"
else
      SSH_HOST=`eval magento-cloud environment:ssh --all --project $CLOUD_PROJECT_ID`
      SSH_HOST=$(echo "$SSH_HOST" | head -1)
      echo "SSH Host is: ${SSH_HOST}"
      cloud-teleport ${SSH_HOST} dump
fi

warden env-init ${PROJECT_NAME} magento2
warden sign-certificate ${PROJECT_NAME}.test


CODE_FILE="$(ls  php*.code.tar.gz | sort -V | tail -n1)"
DATABASE_FILE="$(ls  php*.database.sql.gz | sort -V | tail -n1)"

if [ -n "${CODE_FILE}" ]
then
  PHP_VERSION="${CODE_FILE/php/}"
  PHP_VERSION="${PHP_VERSION/.code.tar.gz/}"
  echo "Detected php version is ${PHP_VERSION}"

  # now I don't have php lower than 7.3, so try to deploy 7.3 for all other versions
  if [ "${PHP_VERSION}" != "74" ]
  then
      sed -i '' 's/PHP_VERSION=7.4/PHP_VERSION=7.3/g' .env
  fi
fi

warden env up

if [ -n "${CODE_FILE}" ]
then
  echo "Unpacking code..."
  tar -xzf ${CODE_FILE}
fi

if [ -n "${DATABASE_FILE}" ]
then
  echo "Importing db dump..."
  gunzip -c ${DATABASE_FILE} | warden db import
fi

echo "Replacing app/etc/env.php"
replace-env

warden env exec -T php-fpm composer dump-autoload
warden env exec -T php-fpm php bin/magento d:m:set developer
warden env exec -T php-fpm php bin/magento a:c:i
warden env exec -T php-fpm php bin/magento ca:f
warden env exec -T php-fpm php bin/magento ca:f
warden env exec -T php-fpm php bin/magento admin:user:create --admin-user admin --admin-password 123123q --admin-email admin@example.com --admin-firstname admf --admin-lastname adml
warden env exec -T php-fpm php bin/magento mo:di Magento_TwoFactorAuth




echo "https://app.${PROJECT_NAME}.test/"

echo "RUN: cd ${PROJECT_NAME} && sudo wah to add host to /etc/hosts"

#echo "Add host into hosts file"
#echo "127.0.0.1 app.${PROJECT_NAME}.test" >> /etc/hosts
